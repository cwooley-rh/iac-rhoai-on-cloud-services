- name: "ensure the operator namespace ({{ operator_namespace }}) exists"
  when: operator_namespace != "openshift-operators"
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ operator_namespace }}"

- name: "check if namespace ({{ operator_namespace }}) has an operator group"
  kubernetes.core.k8s_info:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ operator_namespace }}"
  register: _operator_group_info

- name: "create operator group in namespace {{ operator_namespace }}"
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    definition: "{{ lookup('template', 'operatorgroup.yaml.j2') | from_yaml }}"
  when: _operator_group_info.resources | length == 0

- name: "install {{ operator_name }} operator in {{ operator_namespace }}"
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ operator_name }}"
        namespace: "{{ operator_namespace }}"
      spec:
        channel: "{{ operator_channel }}"
        installPlanApproval: "{{ operator_install_plan_approval }}"
        name: "{{ operator_package | default(operator_name) }}"
        source: "{{ operator_source }}"
        sourceNamespace: "{{ operator_source_namespace }}"

- name: "wait for operator {{ operator_name }} operator in {{ operator_namespace }}"
  when: operator_wait | bool
  block:
    - name: "Check intended version of {{ operator_name }}"
      kubernetes.core.k8s_info:
        host: "{{ host }}"
        api_key: "{{ api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        name: "{{ operator_name }}"
        namespace: "{{ operator_namespace }}"
      register: _subscription
      retries: 10
      delay: 30
      until:
      - _subscription.resources[0].status.currentCSV is defined
      - _subscription.resources[0].status.currentCSV | length > 0
      no_log: true

    - name: "Wait until intended version of {{ operator_name }} is installed"
      kubernetes.core.k8s_info:
        host: "{{ host }}"
        api_key: "{{ api_key }}"
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        name: "{{ _subscription.resources[0].status.currentCSV }}"
        namespace: "{{ operator_namespace }}"
      register: _csv
      retries: 30
      delay: 30
      until:
      - _csv.resources[0].status.phase is defined
      - _csv.resources[0].status.phase | length > 0
      - _csv.resources[0].status.phase == "Succeeded"
      # ignore_errors: "{{ install_operator_install_csv_ignore_error }}"
      no_log: true