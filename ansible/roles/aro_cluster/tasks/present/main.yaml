---
- name: Check to see if ARO cluster already exists
  azure.azcollection.azure_rm_openshiftmanagedcluster_info:
    resource_group: "{{ resource_group_name }}"
    name: "{{ cluster_name }}"
  register: _aro_check
  failed_when: False
  changed_when: False
  no_log: true

- fail:
    msg: |
      Cluster {{ resource_group_name }} failed to provision.
      Cluster Status:
      {{ _aro_check }}
  when: (_aro_check.clusters != {}) and
        (_aro_check.clusters.properties.provisioningState == "Failed")

- debug:
    msg: |
      A cluster with the name {{ resource_group_name }} already exists.
      Skipping cluster Creation.
  when: _aro_check.clusters != {}

- when:
    - _aro_check.clusters == {}
  block:
    - name: what cluster am i creating?
      debug:
        msg: |
          ***************************************
          Preparing to create {{ cluster_name }}.
          This task may take up to an hour.
          ***************************************
        verbosity: 0

    - name: Create the ARO Cluster (This may take 30 minutes)
      cloud.terraform.terraform:
        project_path: "{{ tf_project_path }}"
        state: present
        variables:
          cluster_name: "{{ cluster_name }}"
          resource_group_name: "{{ resource_group_name }}"
          pull_secret_path: "{{ pull_secret_path }}"
          subscription_id: "{{ subscription_id }}"
          aro_version: "{{ aro_version }}"
          location: "{{ location }}"
          worker_node_count: "{{ worker_node_count }}"
          tags: "{{ aro_tags | to_json }}"
        force_init: true
      register: _tf

- name: get credentials
  azure_rm_openshiftmanagedcluster_credentials_info:
    resource_group: "{{ resource_group_name }}"
    name: "{{ cluster_name }}"
  register: _aro_creds
  no_log: true

- name: get cluster details
  azure.azcollection.azure_rm_openshiftmanagedcluster_info:
    resource_group: "{{ resource_group_name }}"
    name: "{{ cluster_name }}"
  register: _aro_info
  failed_when: False
  changed_when: False
  no_log: true

- set_fact:
    cluster_api_url: "{{ _aro_info.clusters.properties.apiserverProfile.url }}"
    ocp_username: "{{ _aro_creds.credentials.kubeadminUsername }}"
    ocp_password: "{{ _aro_creds.credentials.kubeadminPassword }}"
  no_log: true

- debug:
    msg: |
      to log into the cluster run:
        oc login {{ cluster_api_url }} --username "{{ ocp_username }}" --password '{{ ocp_password }}'