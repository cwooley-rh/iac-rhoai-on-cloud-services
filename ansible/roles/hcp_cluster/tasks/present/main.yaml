---

- name: Create the ROSA HCP Cluster (This may take 30 minutes)
  cloud.terraform.terraform:
    project_path: "{{ tf_project_path }}"
    state: present
    variables:
      token: "{{ hcp_cluster_tf_vars.token }}"
      admin_password: "{{ hcp_cluster_tf_vars.admin_password }}"
      # ocp_version: "{{ tf_vars.ocp_version | default(omit) }}"
      region: "{{ hcp_cluster_tf_vars.region }}"
      cluster_name: "{{ hcp_cluster_tf_vars.cluster_name }}"
      tags: "{{ hcp_cluster_tf_vars.tags | to_json }}"
      bucket_names: "{{ hcp_cluster_tf_vars.bucket_names | to_json }}"
      secondary_machine_pool_name: "{{ hcp_cluster_tf_vars.secondary_machine_pool_name }}"
      secondary_machine_pool_instance_type: "{{ hcp_cluster_tf_vars.secondary_machine_pool_instance_type }}"
      secondary_machine_pool_replicas: "{{ hcp_cluster_tf_vars.secondary_machine_pool_replicas }}"
      vpc_cidr: "{{ hcp_cluster_tf_vars.vpc_cidr }}"
      developer_password: "{{ hcp_cluster_tf_vars.developer_password }}"
    force_init: true
  register: _tf

- name: Set Cluster Login Credentials
  ansible.builtin.set_fact:
    rosa_cluster_api_url: "{{ _tf.outputs.rosa.value.cluster_api_url }}"

- name: Cluster Login
  ansible.builtin.debug:
    msg: |
      to log into the cluster run:
        oc login {{ rosa_cluster_api_url }} --username admin --password '{{ hcp_cluster_tf_vars.admin_password }}'

- name: Terraform Outputs
  ansible.builtin.debug:
    msg: |
      here are the terraform outputs available to you for further extension of this automation:
      {{ _tf.outputs }}
