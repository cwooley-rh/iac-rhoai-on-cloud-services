---

- name: Ensure the redhat-ods-operator namespace exists
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: redhat-ods-operator

- name: Create OperatorGroup for OpenShift AI Operator
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: redhat-ods-operator-group
        namespace: redhat-ods-operator

- name: Create Subscription for OpenShift AI Operator
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: rhods-operator
        namespace: redhat-ods-operator
      spec:
        channel: fast
        installPlanApproval: Automatic
        name: rhods-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: wait for OpenShift AI Operator to be deployed
  kubernetes.core.k8s_info:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    kind: Pod
    wait: yes
    namespace: redhat-ods-operator
    label_selectors:
      - "name=rhods-operator"
    wait_sleep: 10
    wait_timeout: 360

# oc wait --for=jsonpath='{.status.replicas}'=1 deployment \
#   -n redhat-ods-operator rhods-operator



- name: Create Data Science Cluster
  community.okd.k8s:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    state: present
    definition:
      apiVersion: datasciencecluster.opendatahub.io/v1
      kind: DataScienceCluster
      metadata:
        name: default-dsc
        labels:
          app.kubernetes.io/created-by: rhods-operator
          app.kubernetes.io/instance: default-dsc
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: datasciencecluster
          app.kubernetes.io/part-of: rhods-operator
      spec:
        components:
          codeflare:
            managementState: Managed
          dashboard:
            managementState: Managed
          datasciencepipelines:
            managementState: Managed
          kserve:
            serving:
              ingressGateway:
                certificate:
                  type: OpenshiftDefaultIngress
              managementState: Managed
          kueue:
            managementState: Managed
          modelmeshserving:
            managementState: Managed
          ray:
            managementState: Managed
          workbenches:
            managementState: Managed

- name: wait for OpenShift Data Science Cluster
  kubernetes.core.k8s_info:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    kind: Pod
    namespace: redhat-ods-applications
    label_selectors:
      - "app=rhods-dashboard"
    wait_sleep: 10
    wait_timeout: 360
    wait: true

- name: fetch Red Hat OpenShift AI url
  kubernetes.core.k8s_info:
    host: "{{ host }}"
    api_key: "{{ api_key }}"
    kind: Route
    namespace: redhat-ods-applications
    name: rhods-dashboard
  register: _rhods_dashboard

- set_fact:
    rhoai_route: "{{ _rhods_dashboard.resources[0].spec.host }}"